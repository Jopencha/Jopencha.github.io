<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>opencv环境搭建</title>
    <link href="/2022/08/30/opencv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/08/30/opencv%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Qt配置opencv-opencv-contrib"><a href="#Qt配置opencv-opencv-contrib" class="headerlink" title="Qt配置opencv+opencv_contrib"></a>Qt配置opencv+opencv_contrib</h1><p>①环境概述：<br><a href="https://download.qt.io/archive/qt/">Qt</a>5.12.2 + <a href="https://www.python.org/downloads/">python</a>3.7.1_32 + <a href="https://cmake.org/files/">cmake</a>3.18.5_x64<br>②源文件：<br>1.github下载<br><a href="https://github.com/opencv/opencv">opencv</a> + <a href="https://github.com/opencv/opencv_contrib">opencv_contrib</a><br>[此文用的3.4.14版本]<br>2.opencv官网下载<br><a href="https://opencv.org/releases/">opencv</a></p><blockquote><p>注：opencv和opencv_contrib用同一版本，git clone默认是master。<br>git branch -a:<br><img src="https://img-blog.csdnimg.cn/f6b4eb67f05f4e31917f2fab463f2623.png" alt="git branch -a"><br>git checkout x.x.x:<br><img src="https://img-blog.csdnimg.cn/fd4f8a4ec9584fb2aace9ca85de46faf.png" alt="git checkout x.x.x"></p></blockquote><h4 id="1、Qt"><a href="#1、Qt" class="headerlink" title="1、Qt"></a>1、Qt</h4><blockquote><p> 注：安装选择mingw编译器，有32位和64位，最好两个都选。另外tools也要勾选mingw，将安装的tools添加到系统path，后面编译安装需要。</p></blockquote><h4 id="2、python"><a href="#2、python" class="headerlink" title="2、python"></a>2、python</h4><blockquote><p> 注：用32位编译器则装32位python，64位对应，附加安装建议全部勾上（非科学上网的话，可能较慢）。</p></blockquote><h4 id="3、cmake编译opencv-opencv-contrib"><a href="#3、cmake编译opencv-opencv-contrib" class="headerlink" title="3、cmake编译opencv+opencv contrib"></a>3、cmake编译opencv+opencv contrib</h4><p>① cmake<br><img src="https://img-blog.csdnimg.cn/186adab2cf724a0e9ce04f3b5393d3e4.png" alt="cmake"></p><blockquote><p>第一栏：选择opencv源目录<br>第二栏：新建文件夹路径（放编译后的库）</p></blockquote><p>②第一次configure<br><img src="https://img-blog.csdnimg.cn/dcbf0da8e10f4bdfa8b823e67c8dbff2.png" alt="configure"><br>configure done后，配置条目</p><p><code>[查找这几项，打√勾选，打×取消]</code><br>WITH_OPENGL √<br>WITH_QT √<br>OPENCV_ENABLE_NOFREE √<br>BUILD_opencv_world ×<br>ENABLE_PRECOMPILED_HEADERS ×<br>OPENCV_GENERATE_SETUPVARS ×<br><code>[添加opencv_contrib模块]</code><br>查找OPENCV_EXTRA_MODULES_PATH项<br>设置为opencv_contrib的modules路径<br><img src="https://img-blog.csdnimg.cn/642b4a10b49649ceadbf8a6e3fb10549.png" alt="modules"><br> <code>[新增条目，Add Entry]</code><br>&#x3D;&#x3D;[QT_DIR]为Qt安装根目录&#x3D;&#x3D;<br>1.Qt5_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5<br>2.Qt5Concurrent_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5Concurrent<br>3.Qt5Core_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5Core<br>4. Qt5Gui_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5Gui<br>5.Qt5OpenGL_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5OpenGL<br>6.Qt5Test_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5Test<br>7.Qt5Widgets_DIR<br>[QT_DIR]&#x2F;5.12.2&#x2F;mingw73_32&#x2F;lib&#x2F;cmake&#x2F;Qt5Widgets</p><p>③第二次configure<br><img src="https://img-blog.csdnimg.cn/3813778b5c6b4127bc1d60c5697cfb7f.png" alt="configure done"><br>无报错configure done后，点击generate生成配置后的源。<br>④mingw32-make编译安装<br>&#x3D;&#x3D;-j 后接的参数指线程数，小于等于自己电脑核的数量。&#x3D;&#x3D;<br>编译：<code>mingw32-make -j 16</code><br><img src="https://img-blog.csdnimg.cn/a568dc8614aa47b0ad6fc461cfaf9b7d.png" alt="make"><br>安装：<code>mingw32-make install -j 16</code><br><img src="https://img-blog.csdnimg.cn/2c097519bc694d46ae1c01f7115f447b.png" alt="make install"></p><h4 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h4><p>SURF算法（opencv_contrib） + imread&#x2F;imshow(opencv)</p><figure><div class="code-wrapper"><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;core/core.hpp></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;imgproc.hpp></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;highgui/highgui.hpp></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/opencv.hpp></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"opencv2/xfeatures2d.hpp"</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token double-colon punctuation">::</span>xfeatures2d<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    Mat src1 <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\Administrator\\Desktop\\QT_project\\cv_proj\\1.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat src2 <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\Administrator\\Desktop\\QT_project\\cv_proj\\1_1.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat MatchesImage<span class="token punctuation">;</span>    Mat src1_vector<span class="token punctuation">,</span> src2_vector<span class="token punctuation">;</span><span class="token comment">//用来存放特征点的描述向量</span>    BFMatcher <span class="token function">matcher</span><span class="token punctuation">(</span>NORM_L2<span class="token punctuation">)</span><span class="token punctuation">;</span>    vector<span class="token operator">&lt;</span>DMatch<span class="token operator">></span> matches<span class="token punctuation">,</span> good_matches<span class="token punctuation">;</span>    vector<span class="token operator">&lt;</span>KeyPoint<span class="token operator">></span> keypoints1<span class="token punctuation">,</span> keypoints2<span class="token punctuation">;</span>    <span class="token comment">// SURF特征点检测</span>    <span class="token keyword">int</span> minHessian <span class="token operator">=</span> <span class="token number">275</span><span class="token punctuation">;</span>    <span class="token comment">//创建一个surf类检测器对象并初始化</span>    Ptr<span class="token operator">&lt;</span>SURF<span class="token operator">></span> detector <span class="token operator">=</span> <span class="token class-name">SURF</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>minHessian<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>src1<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> src2<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"Input_Image"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"BFMatch_Image"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"Input_Image"</span><span class="token punctuation">,</span> src1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//找到特征点并计算特征描述子(向量)</span>    detector<span class="token operator">-></span><span class="token function">detectAndCompute</span><span class="token punctuation">(</span>src1<span class="token punctuation">,</span> <span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> keypoints1<span class="token punctuation">,</span> src1_vector<span class="token punctuation">)</span><span class="token punctuation">;</span>    detector<span class="token operator">-></span><span class="token function">detectAndCompute</span><span class="token punctuation">(</span>src2<span class="token punctuation">,</span> <span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> keypoints2<span class="token punctuation">,</span> src2_vector<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//匹配，数据来源是特征向量，结果存在DMatch里面</span>    matcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>src1_vector<span class="token punctuation">,</span> src2_vector<span class="token punctuation">,</span> matches<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>matches<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> matches<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//匹配点数量不大于50</span>    <span class="token keyword">int</span> ptsPairs <span class="token operator">=</span> std<span class="token double-colon punctuation">::</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>matches<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> ptsPairs <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ptsPairs<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        good_matches<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>matches<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//绘制匹配点</span>    <span class="token function">drawMatches</span><span class="token punctuation">(</span>src1<span class="token punctuation">,</span> keypoints1<span class="token punctuation">,</span> src2<span class="token punctuation">,</span> keypoints2<span class="token punctuation">,</span> good_matches<span class="token punctuation">,</span> MatchesImage<span class="token punctuation">,</span> <span class="token class-name">Scalar</span><span class="token double-colon punctuation">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Scalar</span><span class="token double-colon punctuation">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">vector</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DrawMatchesFlags<span class="token double-colon punctuation">::</span>NOT_DRAW_SINGLE_POINTS<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"BFMatch_Image"</span><span class="token punctuation">,</span> MatchesImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="5、结果"><a href="#5、结果" class="headerlink" title="5、结果"></a>5、结果</h4><p>①、原图<br><img src="https://img-blog.csdnimg.cn/6a4c6501fc17494eb9c63ed654743652.png" alt="原图"></p><p>②、对比<br><img src="https://img-blog.csdnimg.cn/d891ff1f5eb14d8bba0dbe94e8b1a551.png" alt="对比"></p>]]></content>
    
    
    
    <tags>
      
      <tag>opencv</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
